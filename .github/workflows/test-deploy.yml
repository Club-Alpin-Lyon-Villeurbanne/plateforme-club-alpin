name: Test Deploy Workflow üß™
on:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test-deploy:
    environment: development
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      # Obtention des informations sur les commits pour les inclure dans la notification
      - name: Get commit info
        id: commit-info
        run: |
          # R√©cup√©ration du hash du dernier commit d√©ploy√© depuis les variables d'environnement
          LAST_DEPLOYED_SHA=${{ vars.LAST_DEPLOYED_SHA }}
          
          if [ -n "$LAST_DEPLOYED_SHA" ]; then
            # Si un hash existe, on r√©cup√®re les commits depuis ce hash
            CHANGES=$(git log $LAST_DEPLOYED_SHA..HEAD --pretty=format:"‚Ä¢ %h - %s (%an)" | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
            echo "changes=$CHANGES" >> $GITHUB_OUTPUT
          else
            # Sinon, on r√©cup√®re les 5 derniers commits
            CHANGES=$(git log -5 --pretty=format:"‚Ä¢ %h - %s (%an)" | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
            echo "changes=$CHANGES" >> $GITHUB_OUTPUT
          fi
          
          # Informations sur le commit actuel
          echo "author=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT
          echo "message=$(git log -1 --pretty=format:'%s')" >> $GITHUB_OUTPUT
          echo "sha_short=$(git log -1 --pretty=format:'%h')" >> $GITHUB_OUTPUT
          echo "sha_full=$(git log -1 --pretty=format:'%H')" >> $GITHUB_OUTPUT
          
      # Validation des changements
      - name: Validate changes
        run: |
          if [ -z "${{ steps.commit-info.outputs.changes }}" ]; then
            echo "Aucun changement d√©tect√© depuis le dernier d√©ploiement"
            exit 1
          fi
          
      # Simulation de d√©ploiement (au lieu de d√©ployer r√©ellement)
      - name: Simulate deployment
        run: |
          echo "Simulation de d√©ploiement r√©ussie"
          echo "Dernier commit d√©ploy√© : ${{ steps.commit-info.outputs.sha_full }}"
          
      # Mise √† jour du hash du dernier commit d√©ploy√©
      - name: Update last deployed SHA
        if: success()
        run: |
          echo "Simulation de mise √† jour de LAST_DEPLOYED_SHA avec : ${{ steps.commit-info.outputs.sha_full }}"
          # On ne met pas √† jour la vraie variable en mode test
          
      # Notification Slack en cas de succ√®s
      - name: Slack notification - Success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: deployments-test
          SLACK_COLOR: good
          SLACK_ICON: https://clever-cloud.com/favicon.ico
          SLACK_TITLE: '‚úÖ Test de d√©ploiement r√©ussi'
          SLACK_MESSAGE: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Changements qui seraient d√©ploy√©s:*\n${{ steps.commit-info.outputs.changes }}"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n${{ github.ref_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*D√©clench√© par:*\n${{ github.actor }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:*\n${{ steps.commit-info.outputs.sha_short }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*<https://github.com/${{ github.repository }}/commit/${{ steps.commit-info.outputs.sha_full }}|Voir les changements sur GitHub>*"
                  }
                }
              ]
            }
          SLACK_FOOTER: 'Test Deployment'
          MSG_MINIMAL: true
          
      # Notification Slack en cas d'√©chec
      - name: Slack notification - Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: deployments-test
          SLACK_COLOR: danger
          SLACK_ICON: https://clever-cloud.com/favicon.ico
          SLACK_TITLE: '‚ùå Test de d√©ploiement √©chou√©'
          SLACK_MESSAGE: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Changements qui n'auraient pas √©t√© d√©ploy√©s:*\n${{ steps.commit-info.outputs.changes }}"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n${{ github.ref_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*D√©clench√© par:*\n${{ github.actor }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:*\n${{ steps.commit-info.outputs.sha_short }}"
                    }
                  ]
                }
              ]
            }
          SLACK_FOOTER: 'Test Deployment'
          MSG_MINIMAL: true 