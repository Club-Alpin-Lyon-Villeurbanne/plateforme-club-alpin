name: CI/CD staging
on:
  push:
    branches:
      - debug-github-action
env:
    DOMAIN: clubalpinlyon.top

jobs:
  build:
    name: Install dependencies, build assets, deploy on staging
    environment: staging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, imagick

      - name: Check PHP Version
        run: php -v

      - name: Environment for NPM
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: NPM install & run build
        run: |
          node -v
          npm ci --cache .npm --unsafe-perm --prefer-offline
          npm run build

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer (vendor)
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Copy environment files for staging
        run: |
          cp infrastructure/confs/staging/robots.txt public/robots.txt
          cp infrastructure/confs/staging/.env.prod .
          cp legacy/config/www.clubalpinlyon.top/config.php legacy/config/config.php

      - name: Replace variable for staging .env file
        run: |
          sed -i "s/DB_PASSWORD_TO_REPLACE/${{ secrets.AWS_DB_PASSWORD }}/g" .env.prod
          sed -i "s/DEBUG_PARAM_TO_REPLACE/APP_DEBUG=false/g" .env.prod

      - name: Replace variable for staging config file
        run: |
          sed -i "s/MAILGUN_KEY_TO_REPLACE/${{ secrets.MAILGUN_KEY }}/g" "legacy/config/config.php"
          sed -i "s/DB_PASSWORD_TO_REPLACE/${{ secrets.AWS_DB_PASSWORD }}/g" "legacy/config/config.php"

      - name: Composer install & dump-env
        run: |
          composer install --no-dev --no-progress --no-scripts --prefer-dist -a --apcu-autoloader
          composer dump-env prod
          ls vendor/rollerworks/password-strength-validator/src/Resources/

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i --delete"
          SOURCE: "./"
          REMOTE_HOST: ${{ env.DOMAIN }}
          REMOTE_USER: "ec2-user"
          TARGET: "/var/www/clubalpinlyon.top/deployments/${{ github.sha }}"
          EXCLUDE: "assets, node_modules, .circleci, .github, docker, .env.prod, .env.test, .git, infrastructure, Makefile, .npm, docker-compose.yml, .gitignore, package.json, package-lock.json, phive.xml, README.md, tests, translations, symfony.lock, webpack.config.js, matrice-des-droits.png, .php-cs-fixer.dist.php, phpstan.neon, phpunit.xml.dist"
          SCRIPT_AFTER: |
            whoami
            chown -R ec2-user:apache /var/www/clubalpinlyon.top/deployments/${{ github.sha }}
            ln -s "/var/www/clubalpinlyon.top/ftp" "/var/www/clubalpinlyon.top/deployments/${{ github.sha }}/public"
            ln -s "/var/www/clubalpinlyon.top/forum" "/var/www/clubalpinlyon.top/deployments/${{ github.sha }}/public"
            ln -s "/var/www/clubalpinlyon.top/ffcam-ftp-folder" "/var/www/clubalpinlyon.top/deployments/${{ github.sha }}/legacy/config/www.clubalpinlyon.top/ffcam"
            ln -s "/var/www/clubalpinlyon.top/ffcam-ftp-folder" "/var/www/clubalpinlyon.top/deployments/${{ github.sha }}/legacy/config/ffcam-ftp-folder"
            unlink /var/www/clubalpinlyon.top/deployments/current
            ln -s/var/www/clubalpinlyon.top/deployments/${{ github.sha }} /var/www/clubalpinlyon.fr/deployments/current
            echo $RSYNC_STDOUT
