name: Deployment on staging ðŸš€
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
    DOMAIN: clubalpinlyon.top
    BASE_PATH: /var/www/clubalpinlyon.top
    DEPLOYMENT_PATH: /var/www/clubalpinlyon.top/deployments

jobs:
  php-cs-fixer:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: docker://oskarstark/php-cs-fixer-ga

  deploy:
    name: Deploy on staging
    if: github.ref == 'refs/heads/main'
    needs:
      - php-cs-fixer
    environment: staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP, extensions and composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, imagick

      - uses: actions/setup-node@v3
        with:
          node-version: "20"

      -  run: npm ci --cache .npm --unsafe-perm --prefer-offline
      -  run: npm run build

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer (vendor)
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Copy environment files for staging
        run: |
          cp infrastructure/confs/staging/robots.txt public/robots.txt
          cp infrastructure/confs/staging/.env.prod .
          cp legacy/config/www.${{ env.DOMAIN }}/config.php legacy/config/config.php

      - name: Replace variable for staging .env file
        run: |
          sed -i "s/DB_PASSWORD_TO_REPLACE/${{ secrets.AWS_DB_PASSWORD }}/g" .env.prod
          sed -i "s/DEBUG_PARAM_TO_REPLACE/APP_DEBUG=true/g" .env.prod

      - name: Replace variable for staging config file
        run: |
          sed -i "s/MAILGUN_KEY_TO_REPLACE/${{ secrets.MAILGUN_KEY }}/g" "legacy/config/config.php"
          sed -i "s/DB_PASSWORD_TO_REPLACE/${{ secrets.AWS_DB_PASSWORD }}/g" "legacy/config/config.php"

      - name: Composer install & dump-env
        run: |
          composer install --no-dev --no-progress --no-scripts --prefer-dist -a --apcu-autoloader
          composer dump-env prod

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: "./"
          REMOTE_HOST: ${{ env.DOMAIN }}
          REMOTE_USER: "ec2-user"
          TARGET: "${{ env.DEPLOYMENT_PATH }}/${{ github.sha }}"
          EXCLUDE: "assets, node_modules, .github, docker, .env.prod, .env.test, .git, infrastructure, Makefile, .npm, docker-compose.yml, .gitignore, package.json, package-lock.json, phive.xml, README.md, tests, symfony.lock, webpack.config.js, matrice-des-droits.png, .php-cs-fixer.dist.php, phpstan.neon, phpunit.xml.dist"

      - name: After Deployement = create symlinks, set permissions, run migrations and remove old releases
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.DOMAIN }}
          username: "ec2-user"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo chown -R ec2-user:apache ${{ env.DEPLOYMENT_PATH }}/${{ github.sha }}
            mkdir -p ${{ env.DEPLOYMENT_PATH }}/${{ github.sha }}/var/cache/prod
            mkdir -p ${{ env.DEPLOYMENT_PATH }}/${{ github.sha }}/var/log
            sudo chmod -R 775 ${{ env.DEPLOYMENT_PATH }}/${{ github.sha }}/var

            ln -s "${{ env.BASE_PATH }}/ftp" "${{ env.DEPLOYMENT_PATH }}/${{ github.sha }}/public"
            ln -s "${{ env.BASE_PATH }}/forum" "${{ env.DEPLOYMENT_PATH }}/${{ github.sha }}/public"
            ln -s "${{ env.BASE_PATH }}/ffcam-ftp-folder" "${{ env.DEPLOYMENT_PATH }}/${{ github.sha }}/legacy/config/www.${{ env.DOMAIN }}/ffcam"
            ln -s "${{ env.BASE_PATH }}/ffcam-ftp-folder" "${{ env.DEPLOYMENT_PATH }}/${{ github.sha }}/legacy/config/ffcam-ftp-folder"
            unlink ${{ env.DEPLOYMENT_PATH }}/current
            ln -s ${{ env.DEPLOYMENT_PATH }}/${{ github.sha }} ${{ env.DEPLOYMENT_PATH }}/current
            ${{ env.DEPLOYMENT_PATH }}/current/bin/console doctrine:migrations:sync-metadata-storage --env=prod
            ${{ env.DEPLOYMENT_PATH }}/current/bin/console doctrine:migrations:migrate --env=prod --no-interaction
            ${{ env.DEPLOYMENT_PATH }}/current/bin/console messenger:setup-transports --env=prod
            find ${{ env.DEPLOYMENT_PATH }} -mindepth 1 -maxdepth 1 ! -regex '^${{ env.DEPLOYMENT_PATH }}/${{ github.sha }}\(/.*\)?' -type d -exec echo rm -rf '{}' \;