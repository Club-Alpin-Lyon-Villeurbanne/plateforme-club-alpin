name: Deploy on Production - Chamb√©ry üöÄ
on:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  deploy-to-clevercloud:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/hotfix-prod-')
    environment: production-chambery
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      # Obtention des informations sur les commits pour les inclure dans la notification
      - name: Get commit info
        id: commit-info
        run: |
          # R√©cup√©ration du hash du dernier commit d√©ploy√© depuis les variables d'environnement
          LAST_DEPLOYED_SHA=${{ vars.LAST_DEPLOYED_SHA_CHAMBERY }}
          
          if [ -n "$LAST_DEPLOYED_SHA" ] && git rev-parse --verify "$LAST_DEPLOYED_SHA" >/dev/null 2>&1; then
            # Si un hash existe et est valide, on r√©cup√®re les commits depuis ce hash
            CHANGES=$(git log "$LAST_DEPLOYED_SHA..HEAD" --pretty=format:"‚Ä¢ %h - %s (%an)" | sed 's/"/\\"/g' | tr '\n' '\\n')
            echo "changes=$CHANGES" >> $GITHUB_OUTPUT
          else
            # Sinon, on r√©cup√®re les 5 derniers commits
            CHANGES=$(git log -5 --pretty=format:"‚Ä¢ %h - %s (%an)" | sed 's/"/\\"/g' | tr '\n' '\\n')
            echo "changes=$CHANGES" >> $GITHUB_OUTPUT
          fi
          
          # Informations sur le commit actuel
          echo "author=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT
          echo "message=$(git log -1 --pretty=format:'%s')" >> $GITHUB_OUTPUT
          echo "sha_short=$(git log -1 --pretty=format:'%h')" >> $GITHUB_OUTPUT
          echo "sha_full=$(git log -1 --pretty=format:'%H')" >> $GITHUB_OUTPUT
          
      # Validation des changements
      - name: Validate changes
        run: |
          if [ -z "${{ steps.commit-info.outputs.changes }}" ]; then
            echo "Aucun changement d√©tect√© depuis le dernier d√©ploiement"
            exit 1
          fi
          
      # D√©ploiement sur Clever Cloud
      - name: Deploy to Clever Cloud
        id: deploy
        uses: 47ng/actions-clever-cloud@v2.0.0
        with:
          alias: web-prod-chambery
          force: true
        env:
          CLEVER_TOKEN: ${{ secrets.CLEVER_TOKEN_CHAMBERY }}
          CLEVER_SECRET: ${{ secrets.CLEVER_SECRET_CHAMBERY }}
          
      # Mise √† jour du hash du dernier commit d√©ploy√©
      - name: Update last deployed SHA
        if: success()
        run: |
          # Mise √† jour de la variable LAST_DEPLOYED_SHA_CHAMBERY
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"value\":\"${{ steps.commit-info.outputs.sha_full }}\"}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/variables/LAST_DEPLOYED_SHA_CHAMBERY"
          
      # Notification Slack en cas de succ√®s
      - name: Slack notification - Success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: good
          SLACK_ICON: https://clever-cloud.com/favicon.ico
          SLACK_TITLE: '‚úÖ D√©ploiement r√©ussi sur Production - Chamb√©ry'
          SLACK_MESSAGE: |
            *Changements d√©ploy√©s:*
            ${{ steps.commit-info.outputs.changes }}
            
            *Informations:*
            ‚Ä¢ *Branch:* ${{ github.ref_name }}
            ‚Ä¢ *D√©clench√© par:* ${{ github.actor }}
            ‚Ä¢ *Application:* web-prod-chambery
            ‚Ä¢ *Dernier commit:* ${{ steps.commit-info.outputs.sha_short }}
            
            *<https://github.com/${{ github.repository }}/commit/${{ steps.commit-info.outputs.sha_full }}|Voir les changements sur GitHub>*
            
            *Rappel:*
            Merci de mettre √† jour le journal des changements:
            <https://docs.google.com/document/d/1CzbCZnuNkAFWPn365V2vgJNvAouHgLD52IZ6fLw0du0/edit?pli=1&tab=t.0|Journal des changements (Google Docs)>
          SLACK_FOOTER: 'Clever Cloud Deployment'
          MSG_MINIMAL: false
          
      # Notification Slack en cas d'√©chec
      - name: Slack notification - Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: danger
          SLACK_ICON: https://clever-cloud.com/favicon.ico
          SLACK_TITLE: '‚ùå √âchec du d√©ploiement sur Production - Chamb√©ry'
          SLACK_MESSAGE: |
            *Changements en attente:*
            ${{ steps.commit-info.outputs.changes }}
            
            *Informations:*
            ‚Ä¢ *Branch:* ${{ github.ref_name }}
            ‚Ä¢ *D√©clench√© par:* ${{ github.actor }}
            ‚Ä¢ *Application:* web-prod-chambery
            ‚Ä¢ *Dernier commit:* ${{ steps.commit-info.outputs.sha_short }}
            
            *Pour plus de d√©tails, consultez les logs Clever Cloud*
          SLACK_FOOTER: 'Clever Cloud Deployment'
          MSG_MINIMAL: false