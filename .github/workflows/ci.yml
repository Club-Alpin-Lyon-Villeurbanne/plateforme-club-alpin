name: Continuous integration ⚙️
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Install dependencies, build assets, run tests
    environment: staging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, imagick

      - name: Environment for NPM
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: NPM install & run build
        run: |
          node -v
          npm ci --cache .npm --unsafe-perm --prefer-offline
          npm run build

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer (vendor)
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Copy environment files for production
        run: |
          cp infrastructure/confs/production/robots.txt public/robots.txt
          cp infrastructure/confs/production/.env.prod .
          cp legacy/config/www.clubalpinlyon.fr/config.php legacy/config/config.php

      - name: Replace variable for production .env file
        run: |
          sed -i "s/DB_PASSWORD_TO_REPLACE/${{ secrets.AWS_DB_PASSWORD }}/g" .env.prod
          sed -i "s/DEBUG_PARAM_TO_REPLACE/APP_DEBUG=false/g" .env.prod

      - name: Replace variable for production config file
        run: |
          sed -i "s/MAILGUN_KEY_TO_REPLACE/${{ secrets.MAILGUN_KEY }}/g" "legacy/config/config.php"
          sed -i "s/DB_PASSWORD_TO_REPLACE/${{ secrets.AWS_DB_PASSWORD }}/g" "legacy/config/config.php"

      - name: Composer install & dump-env
        run: |
          composer install --no-dev --no-progress --no-scripts --prefer-dist -a --apcu-autoloader
          composer dump-env prod
