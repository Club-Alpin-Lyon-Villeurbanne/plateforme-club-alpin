name: 'Prepare Environment'
description: 'Prepares the environment for testing'
runs:
  using: "composite"
  steps:
    - name: Set UID/GID as environment variables
      shell: bash
      run: |
        echo "UID=$(id -u)" >> $GITHUB_ENV
        echo "GID=$(id -g)" >> $GITHUB_ENV

    - name: Cache Vendor
      id: cache-vendor
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-vendor-${{ hashFiles('composer.lock') }}

    - name: Cache MySQL image
      uses: actions/cache@v3
      with:
        path: /tmp/mysql-image
        key: mysql-8-${{ runner.os }}

    - name: Pull MySQL image
      shell: bash
      run: |
        if [ ! -f /tmp/mysql-image/mysql.tar ]; then
          mkdir -p /tmp/mysql-image
          docker pull mysql:8
          docker save mysql:8 > /tmp/mysql-image/mysql.tar
        fi

    - name: Load MySQL image
      shell: bash
      run: |
        docker load < /tmp/mysql-image/mysql.tar

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and cache application image
      if: steps.cache-docker-image.outputs.cache-hit != 'true'
      uses: docker/build-push-action@v5
      with:
        context: docker
        push: false
        load: true
        build-args: |
          UID=${{ env.UID }}
          GID=${{ env.GID }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        tags: app:latest

    - name: Build the environment
      shell: bash
      run: |
        make init profile=ci 
