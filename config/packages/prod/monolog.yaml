monolog:
    handlers:
        main:
            # Fingers crossed will hold logs until the "action_level" is reached.
            # When this action level occurs, logs are forwarded to file + test handlers
            type: fingers_crossed
            handler: nested # Inner handler
            action_level: error # Level at which the inner handler will receive the logs held.
            stop_buffering: false # Re-buffer after the action level was reached.
            passthru_level: error # When flushing, discard logs below this level.
            buffer_size:  50 # How many messages should be saved? Prevent memory leaks
            activation_strategy: App\Bridge\Monolog\ActivationStrategy\HttpKernelExceptionActivationStrategy
            channels: ["!event"]

        nested:
            type:    group
            members: [ file ]
            process_psr_3_messages: true
        file:
            type:  stream
            path: "php://stdout"
            level: debug
            bubble: false # Do not stop propagation of the record for next handler.
            formatter: app.monolog.formatter.json
        sentry:
            type: sentry
            level: !php/const Monolog\Logger::ERROR
            hub_id: Sentry\State\HubInterface
            fill_extra_context: true
        console:
            type: service
            process_psr_3_messages: true
            channels: ["!event", "!doctrine"]

services:
    app.monolog.formatter.json:
        class: Monolog\Formatter\JsonFormatter
        calls:
            - [includeStacktraces]

    Monolog\Processor\PsrLogMessageProcessor:
        tags: { name: monolog.processor, handler: sentry }
