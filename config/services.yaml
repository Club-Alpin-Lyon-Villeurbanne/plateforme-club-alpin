# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    legacy_env_ANALYTICS_ACCOUNT: "%env(string:ANALYTICS_ACCOUNT)%"
    legacy_env_GOOGLE_SITE_VERIFICATION: "%env(string:GOOGLE_SITE_VERIFICATION)%"
    legacy_env_MAIL_EMITTER_EMAIL: "%env(MAIL_EMITTER_EMAIL)%"
    legacy_env_MAIL_EMITTER_NAME: "%env(MAIL_EMITTER_NAME)%"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $kernelProjectDir: '%kernel.project_dir%'
            $kernelCacheDir: '%kernel.cache_dir%'
            $kernelEnvironment: '%kernel.environment%'
            $recaptchaSecret: '%env(RECAPTCHA_SECRET)%'

    _instanceof:

        App\Bridge\Monolog\SentryHandlerLogFilter\LogFilterInterface:
            tags:
                - { name: sentry_handler.log_filter }

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Legacy\LegacyRouteLoader:
        tags: ['routing.loader']

    App\Bridge\Monolog\Handler\SentryHandler:
        arguments:
            $logFilters: !tagged_iterator sentry_handler.log_filter

    App\Mailer\Mailer:
        arguments:
            $replyTo: '%env(MAIL_EMITTER_EMAIL)%'
            $nameEmitter: '%env(MAIL_EMITTER_NAME)%'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        public: true
        arguments:
            - '%env(DATABASE_URL)%'

    App\Controller\AdminController:
      arguments:
        $adminPassord: '%env(PASSWORD_ADMIN)%'

    App\EventListener\ForceHttpsListener:
      arguments:
        $routerContextScheme: '%env(ROUTER_CONTEXT_SCHEME)%'
        $routerContextHost: '%env(ROUTER_CONTEXT_HOST)%'

    # services used in legacy
    legacy_router:
        public: true
        alias: 'router'

    # services used in legacy
    legacy_token_storage:
        public: true
        alias: 'security.token_storage'

    legacy_csrf_token_manager:
        public: true
        alias: Symfony\Component\Security\Csrf\CsrfTokenManagerInterface

    legacy_twig:
        public: true
        alias: Twig\Environment

    legacy_request_stack:
        public: true
        alias: Symfony\Component\HttpFoundation\RequestStack

    legacy_hasher_factory:
        public: true
        alias: Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface

    legacy_logger:
        public: true
        alias: 'logger'

    legacy_user_rights:
        public: true
        class: App\UserRights

    legacy_mysqli_handler:
        public: true
        class: App\Utils\MysqliHandler

    legacy_authorization_checker:
        public: true
        alias: Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface
